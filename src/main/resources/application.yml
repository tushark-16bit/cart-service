logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    org:
      springframework: info

management:
  tracing:
    sampling:
      probability: 1.0

spring:
  application:
    name: cart-service
  data:
    rest:
      detection-strategy: annotated
  datasource:
    url: jdbc:h2:mem:cartdb
  h2:
    console:
      enabled: true
  jpa:
    show-sql:  true
    defer-datasource-initialization: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://dev-29396893.okta.com/oauth2/default
      client:
        registration:
          my-internal-client:
            provider: okta
            authorization-grant-type: client_credentials
            scope: internal
            client-id: 0oa951c1afWqAzegd5d7
            client-secret: KEAYFi-nlIWPwqnk2bqOYMJjMOpd7dNUwODX5UA0
        provider:
          okta:
            issuer-uri: https://dev-29396893.okta.com/oauth2/default
  kafka:
    bootstrap-servers: localhost:9092

book-service-name: book-service

server:
  port: 8100
  servlet:
    context-path: /cart

eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

resilience4j:
  retry:
    instances:
      read-cart:
        maxAttempts: 3
        waitDuration: 1s
        enableExponentialBackoff: true
  ratelimiter:
    instances:
      default:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
  bulkhead:
    instances:
      default:
        maxConcurrentCalls: 4

feign:
  client:
    config:
      default: FULL

okta:
  oauth2:
    issuer: https://dev-29396893.okta.com/oauth2/default
    audience: api://default